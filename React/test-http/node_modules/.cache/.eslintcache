[{"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\index.js":"1","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\reportWebVitals.js":"2","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\App.js":"3","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Comments.js":"4","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Assignments.js":"5","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\MinMax.js":"6","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\PostListAgain.js":"7","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Statistics.js":"8","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\PostForm.js":"9","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\ReviewerComments.js":"10","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\AssiComments.js":"11","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Navbar\\Navbar.js":"12","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\AssignmentList.js":"13","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\User.js":"14","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\StatisticsList.js":"15","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\AssiCommentsList.js":"16","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Navbar\\Button.js":"17","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Navbar\\MenuItems.js":"18","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Pagination\\Posts.js":"19","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Pagination\\Pagination.js":"20"},{"size":500,"mtime":1634329041000,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1634329041000,"results":"23","hashOfConfig":"22"},{"size":2265,"mtime":1634329041000,"results":"24","hashOfConfig":"22"},{"size":1845,"mtime":1635174784456,"results":"25","hashOfConfig":"22"},{"size":1166,"mtime":1634329041000,"results":"26","hashOfConfig":"22"},{"size":1980,"mtime":1634329041000,"results":"27","hashOfConfig":"22"},{"size":956,"mtime":1634329041000,"results":"28","hashOfConfig":"22"},{"size":970,"mtime":1634329041000,"results":"29","hashOfConfig":"22"},{"size":1277,"mtime":1634329041000,"results":"30","hashOfConfig":"22"},{"size":1455,"mtime":1634329041000,"results":"31","hashOfConfig":"22"},{"size":1446,"mtime":1634329041000,"results":"32","hashOfConfig":"22"},{"size":1225,"mtime":1634329041000,"results":"33","hashOfConfig":"22"},{"size":372,"mtime":1634329041000,"results":"34","hashOfConfig":"22"},{"size":341,"mtime":1634329041000,"results":"35","hashOfConfig":"22"},{"size":274,"mtime":1634329041000,"results":"36","hashOfConfig":"22"},{"size":316,"mtime":1634329041000,"results":"37","hashOfConfig":"22"},{"size":688,"mtime":1634329041000,"results":"38","hashOfConfig":"22"},{"size":881,"mtime":1634329041000,"results":"39","hashOfConfig":"22"},{"size":556,"mtime":1635172825037,"results":"40","hashOfConfig":"22"},{"size":1976,"mtime":1635175946828,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"9n3aba",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\index.js",[],["89","90"],"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\reportWebVitals.js",[],"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\App.js",["91"],"\nimport './App.css';\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport ReactDOM from \"react-dom\";\n\nimport PostListAgain from './components/PostListAgain';\nimport Navbar from './components/Navbar/Navbar'\n\nimport Comments from './components/Comments';\nimport Assignments from './components/Assignments'\nimport MinMax from './components/MinMax';\nimport AssiComments from './components/AssiComments';\nimport Statistics from './components/Statistics';\nimport PostForm from './components/PostForm';\nimport ReviewerComments from './components/ReviewerComments';\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Navbar />\n                <Route path='/' exact>\n                    <h1>\n\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                        Ut enim ad minim veniam, quis nostrud exercitation\n                        ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                        Duis aute irure dolor in reprehenderit in voluptate velit esse\n                        cillum dolore eu fugiat nulla pariatur. Excepteur sint\n                        occaecat cupidatat non proident, sunt in culpa qui\n                        officia deserunt mollit anim id est laborum.\n\n      </h1>\n                </Route>\n            </div>\n            <Route path='/User' >\n                <PostListAgain />\n\n            </Route>\n\n            \n            <Route path='/Comments' >\n                <Comments />\n            </Route>\n\n            <Route path='/Assignments' >\n                <Assignments />\n            </Route>\n\n            <Route path='/Comment/Project/:id' component={AssiComments}>\n            </Route>\n            <Route path='/Comment/Reviewer/:id' component={ReviewerComments}>\n            </Route>\n\n            <Route path='/Post' >\n                <PostForm />\n\n            </Route>\n\n            <Route path='/Max' >\n                <MinMax />\n            </Route>\n\n            <Route path='/Statistics' >\n                <Statistics />\n            </Route>\n\n        </Router>\n    );\n}\n\nexport default App;\n","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Comments.js",["92","93","94"],"import React, {useState,useEffect } from 'react'\nimport axios from 'axios'\n//import CommentList from './CommentList'\nimport Posts from './Pagination/Posts'\nimport { Pagination } from './Pagination/Pagination'\nimport ReactPaginate from \"react-paginate\";\n\nconst Comments = () => {\n\tconst [posts, setPosts] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [currentPage, setCurrentPage] = useState(0);\n\tconst [postsPerPage] = useState(15);\n\t//const pagesVisited = currentPage * postsPerPage;\n\t//const [pageNumber, setPageNumber] = useState(0);\n\tuseEffect(() => {\n\t  const fetchPosts = async () => {\n\t\tsetLoading(true);\n\t\tconst res = await axios.get('https://localhost:44344/api/Basic/comments');\n\t\tsetPosts(res.data);\n\t\tsetLoading(false);\n\t  };\n  \n\t  fetchPosts();\n\t}, []);\n  \n\t// Get current posts\n\t\n\t//const [pageNumber, setPageNumber] = useState(0);\n\n\t//const postsPerPage = 15;\n\tconst pagesVisited = currentPage * postsPerPage;\n\n  \n\tconst displayposts = posts\n\t  .slice(pagesVisited, pagesVisited + postsPerPage)\n\t  .map((post) => {\n\t\treturn (\n\t\t\t<li key={post.id} className='list-group-item' style={{border:'solid'}}>\n\t\t\t{post.id} | {post.userReviewer} | {post.assignment.description} \n\t\t</li>\n\t\t);\n\t  });\n  \n\tconst pageCount = Math.ceil(posts.length / postsPerPage);\n  \n\tconst changePage = ({ selected }) => {\n\t\tsetCurrentPage(selected);\n\t};\n\tconsole.log(pagesVisited, ' pages');\n\treturn (\n\t\n\t  <div className=\"App\">\n\t\t{displayposts}\n\t\t<ReactPaginate\n\t\t  previousLabel={\"Previous\"}\n\t\t  nextLabel={\"Next\"}\n\t\t  pageCount={pageCount}\n\t\t  onPageChange={changePage}\n\t\t  containerClassName={\"paginationBttns\"}\n\t\t  previousLinkClassName={\"previousBttn\"}\n\t\t  nextLinkClassName={\"nextBttn\"}\n\t\t  disabledClassName={\"paginationDisabled\"}\n\t\t  activeClassName={\"paginationActive\"}\n\t\t/>\n\t  </div>\n\t);\n  };\n  \n  export default Comments;","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Assignments.js",[],"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\MinMax.js",["95"],"import React, { Component } from 'react'\nimport axios from 'axios'\n//cleaimport MinMaxList from './MinMaxList'\n//import MaxTest from './MinMaxList'\n\nclass MinMax extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\n\t\tthis.state = {\n      posts: [],\n      errorMsg: '',\n\t  Minid:0,\n\t  Maxid:0,\n\t  Min:100,\n\t  Max:-1,\n\t  IsMax:false,\n\t  IsMin:false\n\t\t}\n\t}\n\n\n    clickHandler(){\n        \n        \n    }\n\n\tcomponentDidMount() {\n\t\taxios\n\t\t\t.get('https://localhost:44344/api/MinMax/userReviewsMinMax')\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response)\n\t\t\t\tthis.setState({ posts: response.data })\n\t\t\t})\n\t\t\t.catch(error => {\n        console.log(error)\n        this.setState({errorMsg: 'Error retrieving data'})\n\t\t\t})\n\t}\n\n\t\n\tMinAdd(post){\n\t\tthis.setState({Min:post.answer})\n\t\tthis.setState({Minid:post.id})\n\t\tconsole.log(post.id,'id')\n\t}\n\n\tMaxAdd(post){\n\t\tthis.setState({Max:post.answer})\n\t\tthis.setState({Maxid:post.id})\n\t\tconsole.log(post.id,'id')\n\t}\n\n\tMaxCliked(){\n\n\t\t\tthis.setState({IsMax:true})\n\t\t\tthis.setState({IsMin:false})\n\t\t\tconsole.log(this.state.IsMin,'min')\n\t\t\tconsole.log(this.state.IsMax,'max')\n\t}\n\n\tMinCliked(){\n\t\tthis.setState({IsMin:true})\n\t\tthis.setState({IsMax:false})\n}\n\n\trender() {\n\t\tconst { posts, errorMsg} = this.state\n\t\t\n\t\tposts.map(post=>(\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tthis.state.Min > post.answer ? this.MinAdd(post):this.state.Min,\n\t\t\tthis.state.Max < post.answer ? this.MaxAdd(post):this.state.Max\n\t\t))\n\t\t\n\t\tlet message\n\t\tif(this.state.IsMin) {message = <h1 style={{borderBlock:'solid'}}> min is: {this.state.Min} with id {this.state.Minid} </h1> } \n\t\telse if(this.state.IsMax){\n\t\t  message =<h1 style={{borderBlock:'solid'}}> max is: {this.state.Max} with id {this.state.Maxid} </h1> }\n\t\t  else {message=null}\n\n\t\treturn (\n\t\t\t\n\t\t\t<div>\n\n\t\t\t\t<button onClick={()=>this.MaxCliked()}>Show Max </button>\n\t\t\t\t<button onClick={()=>this.MinCliked()}>Show Min </button>\n\t\t\t\t{message}\n\t\t\n\t\t\t\t   {errorMsg ? <div>{errorMsg}</div> : null}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default MinMax","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\PostListAgain.js",[],"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Statistics.js",[],"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\PostForm.js",[],"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\ReviewerComments.js",["96"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport AssiCommentsList from './AssiCommentsList'\n\nclass ReviewerComments extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            posts: [],\n            errorMsg: ''\n        }\n    }\n\n    clickHandler() { }\n\n    componentDidMount() {\n        const { id } = this.props.match.params\n        console.log(id)\n        axios\n            .get('https://localhost:44344/api/comment/reviewer/' + id)\n            .then(response => {\n                console.log(response)\n                this.setState({ posts: response.data })\n            })\n            .catch(error => {\n                console.log(error)\n                this.setState({ errorMsg: error.response.data })\n            })\n    }\n\n    render() {\n        const { posts, errorMsg } = this.state\n        if (errorMsg == '') {\n            console.log(errorMsg)\n            const assiComments = posts.map(post => (\n                <AssiCommentsList key={post.target} post={post}></AssiCommentsList >\n\n            ))\n            return (\n                <div>\n                    Target  ,  Reviewer  ,  Answer Type  ,  Answer  ,  Comment\n                    {assiComments}\n                </div>\n            )\n        }\n        else {\n            return (\n                <div>\n                    {errorMsg}\n                </div>\n            )\n        }\n    }\n}\n\nexport default ReviewerComments","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\AssiComments.js",["97"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport AssiCommentsList from './AssiCommentsList'\n\nclass AssiComments extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            posts: [],\n            errorMsg: ''\n        }\n    }\n\n    clickHandler() { }\n\n    componentDidMount() {\n        const { id } = this.props.match.params\n        console.log(id)\n        axios\n            .get('https://localhost:44344/api/comment/project/' + id)\n            .then(response => {\n                console.log(response)\n                this.setState({ posts: response.data })\n            })\n            .catch(error => {\n                console.log(error)\n                this.setState({ errorMsg: error.response.data })\n            })\n    }\n\n    render() {\n        const { posts, errorMsg } = this.state\n        if (errorMsg == '') {\n            console.log(errorMsg)\n            const assiComments = posts.map(post => (\n                <AssiCommentsList key={post.target} post={post}></AssiCommentsList >\n\n            ))\n            return (\n                <div>\n                    Target  ,  Reviewer  ,  Answer Type  ,  Answer  ,  Comment\n                    {assiComments}\n                </div>\n            )\n        }\n        else {\n            return (\n                <div>\n                    {errorMsg}\n                </div>\n            )\n        }\n    }\n}\n\nexport default AssiComments","C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\AssignmentList.js",[],"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\User.js",[],"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\StatisticsList.js",[],"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\AssiCommentsList.js",[],"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Navbar\\Button.js",[],"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Navbar\\MenuItems.js",[],"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Pagination\\Posts.js",[],"C:\\Users\\jimha\\source\\repos\\csams-analytics\\React\\test-http\\src\\components\\Pagination\\Pagination.js",["98","99"],"import React, { useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nexport function Pagination  ({postsPerPage,totalPosts,paginate,posts,pagesVisited})  {\n    console.log('HERE!!! ',{postsPerPage}, {totalPosts})\n    const pageNumbers=[];\n    const [pageNumber, setPageNumber] = useState(0);\n    // for(let i=1;i<=Math.ceil(totalPosts/postsPerPage);i++){\n    //     pageNumbers.push(i);\n    // }\n    // pageNumbers.push(1);\n    // pageNumbers.push(Math.ceil(totalPosts/postsPerPage));\n    const pageCount = Math.ceil(totalPosts/postsPerPage)\n\n        const changePage=({selected})=> {\n            setPageNumber(selected)\n        };\n\n        const displayposts = posts\n        .slice(pagesVisited, pagesVisited + postsPerPage)\n        .map((post) => {\n          return (\n            <li key={post.id} className='list-group-item' style={{border:'solid'}}>\n            {post.id} | {post.userReviewer} | {post.assignment.description} \n        </li>\n          );\n        });\n    \n\n\n\n\n    return (\n      <nav>\n          <ul className='pagination'>\n              {/* {pageNumbers.map(number=>(\n                  <li key={number} className='page-item'>\n                      <button onClick={()=>paginate(number)}  className='page-link'>\n                          {number}\n                      </button>\n                  \n\n                     \n                    </li>\n\n              ))} */}\n              {displayposts}\n                  <ReactPaginate \n                      previousLabel={\"Previous\"}\n                      nextLabel={\"Next\"}\n                      pageCount={pageCount}\n                      onPageChange={changePage}\n                      containerClassName={\"paginationBttns\"}\n        previousLinkClassName={\"previousBttn\"}\n        nextLinkClassName={\"nextBttn\"}\n        disabledClassName={\"paginationDisabled\"}\n        activeClassName={\"paginationActive\"}\n                      \n                      />\n          </ul>\n      </nav>\n    )\n}\n",{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":16},{"ruleId":"104","severity":1,"message":"108","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":13},{"ruleId":"104","severity":1,"message":"109","line":5,"column":10,"nodeType":"106","messageId":"107","endLine":5,"endColumn":20},{"ruleId":"104","severity":1,"message":"110","line":10,"column":9,"nodeType":"106","messageId":"107","endLine":10,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":74,"column":67,"nodeType":"113","messageId":"114","endLine":74,"endColumn":68},{"ruleId":"115","severity":1,"message":"116","line":34,"column":22,"nodeType":"117","messageId":"118","endLine":34,"endColumn":24},{"ruleId":"115","severity":1,"message":"116","line":34,"column":22,"nodeType":"117","messageId":"118","endLine":34,"endColumn":24},{"ruleId":"104","severity":1,"message":"119","line":6,"column":11,"nodeType":"106","messageId":"107","endLine":6,"endColumn":22},{"ruleId":"104","severity":1,"message":"120","line":7,"column":12,"nodeType":"106","messageId":"107","endLine":7,"endColumn":22},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Posts' is defined but never used.","'Pagination' is defined but never used.","'loading' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'pageNumbers' is assigned a value but never used.","'pageNumber' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]