{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jimha\\\\Desktop\\\\React\\\\test-http\\\\src\\\\components\\\\Comments.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CommentList from './CommentList';\nimport Posts from './Pagination/Posts';\nimport { Pagination } from './Pagination/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      errorMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://localhost:44344/api/Basic/comments').then(response => {\n      console.log(response);\n      this.setState({\n        posts: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        errorMsg: 'Error retrieving data'\n      });\n    });\n  }\n\n  render() {\n    const {\n      posts,\n      errorMsg\n    } = this.state; // let currentpage=1;\n    // let postsPerPage=10;\n    // \tconst Pages=()=>{\n    //\tconst[posts,setPosts]=useState([]);\n    //\tconst[loading,setLoading]=useState(false);\n\n    const [currentpage, setCurrentPage] = useState(1);\n    const [postsPerPage, setPostsPerPage] = useState(10); // \t}\n    // const commentlist=posts.map(post => (\n    // \t<CommentList key={post.id} post={post}></CommentList >\n    // ))\n\n    const indexOfLastPost = currentpage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber => setCurrentPage(pageNumber);\n\n    console.log({\n      currentPosts\n    }, ' as current posts. Index of last: ', {\n      indexOfLastPost\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [\"ID   ,  Reviwer, Assingment\", /*#__PURE__*/_jsxDEV(Posts, {\n        posts: currentPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        postsPerPage: postsPerPage,\n        totalPosts: this.state.posts.length,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }, this), errorMsg ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/jimha/Desktop/React/test-http/src/components/Comments.js"],"names":["React","Component","useState","useEffect","axios","CommentList","Posts","Pagination","Comments","constructor","props","state","posts","errorMsg","componentDidMount","get","then","response","console","log","setState","data","catch","error","render","currentpage","setCurrentPage","postsPerPage","setPostsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,UAAT,QAA2B,yBAA3B;;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAChCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIA;;AAKDC,EAAAA,iBAAiB,GAAG;AACnBV,IAAAA,KAAK,CACHW,GADF,CACM,4CADN,EAEEC,IAFF,CAEOC,QAAQ,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEK,QAAQ,CAACI;AAAlB,OAAd;AACA,KALF,EAMEC,KANF,CAMQC,KAAK,IAAI;AACXL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,WAAKH,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACJ,KATF;AAUA;;AAEDW,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEZ,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKF,KAAjC,CADQ,CAER;AACA;AAED;AACC;AACD;;AACC,UAAK,CAACc,WAAD,EAAaC,cAAb,IAA6BxB,QAAQ,CAAC,CAAD,CAA1C;AACA,UAAM,CAACyB,YAAD,EAAcC,eAAd,IAA+B1B,QAAQ,CAAC,EAAD,CAA7C,CATQ,CAaT;AAGC;AACA;AAEA;;AACA,UAAM2B,eAAe,GAACJ,WAAW,GAACE,YAAlC;AACA,UAAMG,gBAAgB,GAACD,eAAe,GAACF,YAAvC;AACA,UAAMI,YAAY,GAACnB,KAAK,CAACoB,KAAN,CAAYF,gBAAZ,EAA6BD,eAA7B,CAAnB;;AAEA,UAAMI,QAAQ,GAAEC,UAAD,IAAcR,cAAc,CAACQ,UAAD,CAA3C;;AAGAhB,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACY,MAAAA;AAAD,KAAZ,EAA2B,oCAA3B,EAAiE;AAACF,MAAAA;AAAD,KAAjE;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6DAEI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEE;AAAd;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,UAAD;AAAY,QAAA,YAAY,EAAEJ,YAA1B;AAAwC,QAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWC,KAAX,CAAiBuB,MAArE;AAA6E,QAAA,QAAQ,EAAEF;AAAvF;AAAA;AAAA;AAAA;AAAA,cAHJ,EAOMpB,QAAQ,gBAAG;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,cAAH,GAA2B,IAPzC;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAWA;;AAjE+B;;AAoEjC,eAAeL,QAAf","sourcesContent":["import React, { Component,useState,useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport CommentList from './CommentList'\r\nimport Posts from './Pagination/Posts'\r\nimport { Pagination } from './Pagination/Pagination'\r\n\r\nclass Comments extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n      posts: [],\r\n      errorMsg: ''\r\n\t\t}\r\n\t}\r\n\r\n\r\n   \r\n\r\n\tcomponentDidMount() {\r\n\t\taxios\r\n\t\t\t.get('https://localhost:44344/api/Basic/comments')\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response)\r\n\t\t\t\tthis.setState({ posts: response.data })\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n        console.log(error)\r\n        this.setState({errorMsg: 'Error retrieving data'})\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { posts, errorMsg } = this.state\r\n\t\t// let currentpage=1;\r\n\t\t// let postsPerPage=10;\r\n\r\n\t// \tconst Pages=()=>{\r\n\t\t//\tconst[posts,setPosts]=useState([]);\r\n\t//\tconst[loading,setLoading]=useState(false);\r\n\t\tconst[currentpage,setCurrentPage]=useState(1);\r\n\t\tconst [postsPerPage,setPostsPerPage]=useState(10);\r\n\r\n\t\t\r\n\r\n\t// \t}\r\n\r\n\t\t\r\n\t\t// const commentlist=posts.map(post => (\r\n\t\t// \t<CommentList key={post.id} post={post}></CommentList >\r\n\r\n\t\t// ))\r\n\t\tconst indexOfLastPost=currentpage*postsPerPage;\r\n\t\tconst indexOfFirstPost=indexOfLastPost-postsPerPage;\r\n\t\tconst currentPosts=posts.slice(indexOfFirstPost,indexOfLastPost);\r\n\r\n\t\tconst paginate=(pageNumber)=>setCurrentPage(pageNumber);\r\n\r\n\r\n\t\tconsole.log({currentPosts},' as current posts. Index of last: ', {indexOfLastPost})\r\n\t\treturn (\r\n\t\t\t<div className='container mt-5'>\r\n\t\t\t\t   ID   ,  Reviwer, Assingment\r\n\t\t\t\t   <Posts posts={currentPosts}/>\r\n\t\t\t\t   <Pagination postsPerPage={postsPerPage} totalPosts={this.state.posts.length} paginate={paginate}/>\r\n               {/* {commentlist} */}\r\n\r\n\t\t\t\t\r\n        {errorMsg ? <div>{errorMsg}</div> : null}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Comments"]},"metadata":{},"sourceType":"module"}