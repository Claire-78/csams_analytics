{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jimha\\\\Desktop\\\\React\\\\test-http\\\\src\\\\components\\\\Comments.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CommentList from './CommentList';\nimport Posts from './Pagination/Posts';\nimport { Pagination } from './Pagination/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      }, () => {\n        this.receivedData();\n      });\n    };\n\n    this.state = {\n      posts: [],\n      errorMsg: '',\n      currentpage: 0,\n      postsPerPage: 10,\n      offset: 0\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://localhost:44344/api/Basic/comments').then(response => {\n      console.log(response);\n      this.setState({\n        posts: response.data\n      });\n      const data = response.data;\n      const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage);\n      const postData = slice.map(pd => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: pd.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pd.thumbnailUrl,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 38\n      }, this));\n      this.setState({\n        pageCount: Math.ceil(data.length / this.state.perPage),\n        postData\n      });\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        errorMsg: 'Error retrieving data'\n      });\n    });\n  }\n\n  render() {\n    const {\n      posts,\n      errorMsg\n    } = this.state;\n    console.log({\n      currentPosts\n    }, ' as current posts. Index of last: ', {\n      indexOfLastPost\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.postData, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"prev\",\n        nextLabel: \"next\",\n        breakLabel: \"...\",\n        breakClassName: \"break-me\",\n        pageCount: this.state.pageCount,\n        marginPagesDisplayed: 2,\n        pageRangeDisplayed: 5,\n        onPageChange: this.handlePageClick,\n        containerClassName: \"pagination\",\n        subContainerClassName: \"pages pagination\",\n        activeClassName: \"active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), errorMsg ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/jimha/Desktop/React/test-http/src/components/Comments.js"],"names":["React","Component","useState","useEffect","axios","CommentList","Posts","Pagination","Comments","constructor","props","handlePageClick","e","selectedPage","selected","offset","state","perPage","setState","currentPage","receivedData","posts","errorMsg","currentpage","postsPerPage","componentDidMount","get","then","response","console","log","data","slice","postData","map","pd","title","thumbnailUrl","pageCount","Math","ceil","length","catch","error","render","currentPosts","indexOfLastPost"],"mappings":"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","sourcesContent":["import React, { Component,useState,useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport CommentList from './CommentList'\r\nimport Posts from './Pagination/Posts'\r\nimport { Pagination } from './Pagination/Pagination'\r\n\r\nclass Comments extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n      posts: [],\r\n      errorMsg: '',\r\n\t  currentpage:0,\r\n\t  postsPerPage:10,\r\n\t  offset:0\r\n\t\t}\r\n\t}\r\n\r\n\r\n   \r\n\r\n\tcomponentDidMount() {\r\n\t\taxios\r\n\t\t\t.get('https://localhost:44344/api/Basic/comments')\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response)\r\n\t\t\t\tthis.setState({ posts: response.data })\r\n\t\t\t\tconst data=response.data \r\n\t\t\t\tconst slice=data.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n\t\t\t\tconst postData = slice.map(pd => <React.Fragment>\r\n                    <p>{pd.title}</p>\r\n                    <img src={pd.thumbnailUrl} alt=\"\"/>\r\n                </React.Fragment>)\r\n\t\t\t\t   this.setState({\r\n                    pageCount: Math.ceil(data.length / this.state.perPage),\r\n                   \r\n                    postData\r\n                })\r\n\t\t\t\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n        console.log(error)\r\n        this.setState({errorMsg: 'Error retrieving data'})\r\n\t\t\t})\r\n\t}\r\n\r\n\thandlePageClick = (e) => {\r\n        const selectedPage = e.selected;\r\n        const offset = selectedPage * this.state.perPage;\r\n\r\n        this.setState({\r\n            currentPage: selectedPage,\r\n            offset: offset\r\n        }, () => {\r\n            this.receivedData()\r\n        });\r\n\r\n    };\r\n\r\n\r\n\trender() {\r\n\t\tconst { posts, errorMsg } = this.state\r\n\t\r\n\t\r\n\t\t\r\n\t\tconsole.log({currentPosts},' as current posts. Index of last: ', {indexOfLastPost})\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<div>\r\n                {this.state.postData}\r\n                <ReactPaginate\r\n                    previousLabel={\"prev\"}\r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={this.state.pageCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={this.handlePageClick}\r\n                    containerClassName={\"pagination\"}\r\n                    subContainerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}/>\r\n\t\t\t{/* // <div className='container mt-5'>\r\n\t\t\t// \t   ID   ,  Reviwer, Assingment\r\n\t\t\t// \t   <Posts posts={currentPosts}/>\r\n\t\t\t// \t   <Pagination postsPerPage={this.state.postsPerPage} totalPosts={this.state.posts.length} paginate={paginate}/>\r\n            //    {commentlist} */}\r\n\r\n\t\t\t\t\r\n        {errorMsg ? <div>{errorMsg}</div> : null}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Comments"]},"metadata":{},"sourceType":"module"}